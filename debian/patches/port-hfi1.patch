Description: Port hfi1 to kernel 4.9.0
Author: Brian T. Smith <bsmith@systemfabricworks.com>
Forwarded: not-needed
Last-Update: <2019-01-30>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -8,7 +8,8 @@
 #kbuild part of makefile
 
 CFLAGS_MODULE += -DUSE_PI_LED_ENABLE=1 -DIFS_DEB9
-obj-y := rdmavt/
+obj-y := rdmavt/ \
+	hfi1/
 
 else
 #normal makefile
--- a/hfi1/file_ops.c
+++ b/hfi1/file_ops.c
@@ -48,7 +48,8 @@
 #include <linux/cdev.h>
 #include <linux/vmalloc.h>
 #include <linux/io.h>
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_RH76) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_RH76) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 #include <linux/sched/mm.h>
 #else
 #include <linux/aio.h>
@@ -142,7 +143,8 @@
 static int ctxt_reset(struct hfi1_ctxtdata *uctxt);
 static int manage_rcvq(struct hfi1_ctxtdata *uctxt, u16 subctxt,
 		       unsigned long arg);
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_RH76) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_RH76) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 static int vma_fault(struct vm_fault *vmf);
 #else
 static int vma_fault(struct vm_area_struct *vma, struct vm_fault *vmf);
@@ -685,7 +687,8 @@
  * Local (non-chip) user memory is not mapped right away but as it is
  * accessed by the user-level code.
  */
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_RH76) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_RH76) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 static int vma_fault(struct vm_fault *vmf)
 #else
 static int vma_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
--- a/hfi1/mad.c
+++ b/hfi1/mad.c
@@ -280,7 +280,8 @@
 	int ret = -EINVAL;
 
 	memset(&attr, 0, sizeof(attr));
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 	attr.type = ah->ibah.type;
 #endif
 	hfi1_update_sm_ah_attr(ibp, &attr, dlid);
@@ -297,7 +298,8 @@
 	struct rdma_ah_attr attr;
 	struct ib_ah *ah = ERR_PTR(-EINVAL);
 	struct rvt_qp *qp0;
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_RH75) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 	struct hfi1_pportdata *ppd = ppd_from_ibp(ibp);
 	struct hfi1_devdata *dd = dd_from_ppd(ppd);
 	u8 port_num = ppd->port;
--- a/hfi1/user_pages.c
+++ b/hfi1/user_pages.c
@@ -46,7 +46,8 @@
  */
 
 #include <linux/mm.h>
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 #include <linux/sched/signal.h>
 #else
 #include <linux/sched.h>
--- a/hfi1/verbs.c
+++ b/hfi1/verbs.c
@@ -1893,7 +1893,8 @@
 	RCU_INIT_POINTER(ibp->rvp.qp[0], NULL);
 	RCU_INIT_POINTER(ibp->rvp.qp[1], NULL);
 }
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 static void hfi1_get_dev_fw_str(struct ib_device *ibdev, char *str)
 {
 	struct rvt_dev_info *rdi = ib_to_rvt(ibdev);
@@ -1903,7 +1904,7 @@
 	snprintf(str, IB_FW_VERSION_NAME_MAX, "%u.%u.%u", dc8051_ver_maj(ver),
 		 dc8051_ver_min(ver), dc8051_ver_patch(ver));
 }
-#elif defined(IFS_RH74) || defined(IFS_SLES12SP3)
+#elif defined(IFS_RH74) || defined(IFS_SLES12SP3) || defined(IFS_DEB9)
 static void hfi1_get_dev_fw_str(struct ib_device *ibdev, char *str,
 				size_t str_len)
 {
@@ -2160,7 +2161,8 @@
 		ib_hfi1_sys_image_guid = ibdev->node_guid;
 	ibdev->owner = THIS_MODULE;
 	ibdev->phys_port_cnt = dd->num_pports;
-#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3)
+#if !defined(IFS_RH73) && !defined(IFS_RH74) && !defined(IFS_SLES12SP2) && !defined(IFS_SLES12SP3) \
+	&& !defined(IFS_DEB9)
 	ibdev->dev.parent = &dd->pcidev->dev;
 #else
 	ibdev->dma_device = &dd->pcidev->dev;
@@ -2171,7 +2173,8 @@
 	ibdev->get_hw_stats = get_hw_stats;
 #endif
 
-#ifdef AIP
+#if defined(AIP) && !defined(IFS_DEB9)
+	/* Debian 9 kernel 4.9.0 lacks alloc_rdma_netdev */
 	ibdev->alloc_rdma_netdev = hfi1_alloc_rn; /* May not be in all distro kernels might need a guard */
 #endif
 	/* keep process mad in the driver */
--- a/compat/compat.h
+++ b/compat/compat.h
@@ -50,6 +50,7 @@
 #include "compat_common.h"
 
 #define IB_FW_VERSION_NAME_MAX		   ETHTOOL_FWVERS_LEN
+#define OPA_SM_CLASS_VERSION               0x80
 
 void pcie_flr(struct pci_dev *dev);
 
--- a/hfi1/ipoib_main.c
+++ b/hfi1/ipoib_main.c
@@ -149,8 +149,13 @@
 	return ret;
 }
 #if !defined(IFS_RH74) && !defined(IFS_SLES12SP2)
-static void hfi1_ipoib_dev_get_stats64(struct net_device *dev,
-				       struct rtnl_link_stats64 *storage)
+#if defined(IFS_DEB9)
+static struct rtnl_link_stats64*
+#else
+static void
+#endif
+hfi1_ipoib_dev_get_stats64(struct net_device *dev,
+			   struct rtnl_link_stats64 *storage)
 {
 	struct hfi1_ipoib_dev_priv *priv = hfi1_ipoib_priv(dev);
 	u64 rx_packets = 0ull;
@@ -188,6 +193,9 @@
 	storage->rx_bytes += rx_bytes;
 	storage->tx_packets += tx_packets;
 	storage->tx_bytes += tx_bytes;
+#if defined(IFS_DEB9)
+	return storage;
+#endif
 }
 #endif
 
@@ -301,7 +309,8 @@
 
 	dev = alloc_netdev_mqs((int)sizeof(struct hfi1_ipoib_rdma_netdev),
 			       name,
-#if defined(IFS_SLES12SP4) || defined(IFS_SLES15) || defined(IFS_SLES12SP3) || defined(IFS_SLES12SP2)
+#if defined(IFS_SLES12SP4) || defined(IFS_SLES15) || defined(IFS_SLES12SP3) || defined(IFS_SLES12SP2)\
+	|| defined(IFS_DEB9)
 			       name_assign_type,
 #endif
 			       setup,
